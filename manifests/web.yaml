apiVersion: apps/v1
kind: Deployment
metadata:
  name: sports
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sports
  template:
    metadata:
      labels:
        app: sports
    spec:
      containers:
        - image: docker.io/bigsidhu/sports-client:c677df8fcd81981bf7069b11d01fb12c9b5a9780
          name: sports-client
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - containerPort: 80
              name: 80tcpport
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
        - image: docker.io/bigsidhu/sports-api:c677df8fcd81981bf7069b11d01fb12c9b5a9780
          name: sports-api
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: 8000tcpport
      volumes:
        - name: config-volume
          configMap:
            name: sports-nginx-config
      restartPolicy: Always
      dnsPolicy: Default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sports-nginx-config
  namespace: default
data:
  nginx.conf: "events {\n  worker_connections 1024;\n}\n\nhttp{\n  server {\n    listen 80;\n    root  /usr/share/nginx/html;\n    include /etc/nginx/mime.types;\n\n    location /api {\n      proxy_pass         http://sports-api:8000/api;\n      proxy_redirect     off;\n      proxy_set_header   Host $host;\n      proxy_set_header   X-Real-IP $remote_addr;\n      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header   X-Forwarded-Host $server_name;\n    }\n  \n  }\n}\n"
spec:
  template:
    spec:
      containers:
        - image: docker.io/bigsidhu/sports-client:c677df8fcd81981bf7069b11d01fb12c9b5a9780
        - image: docker.io/bigsidhu/sports-api:c677df8fcd81981bf7069b11d01fb12c9b5a9780
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sports
  namespace: default
spec:
  rules:
    - host: sports.sidhulabs.ca
      http:
        paths:
          - backend:
              service:
                name: sports-client
                port:
                  number: 80
            pathType: ImplementationSpecific
  template:
    spec:
      containers:
        - image: docker.io/bigsidhu/sports-client:c677df8fcd81981bf7069b11d01fb12c9b5a9780
        - image: docker.io/bigsidhu/sports-api:c677df8fcd81981bf7069b11d01fb12c9b5a9780
status:
  loadBalancer:
    ingress:
      - ip: 10.10.1.51
      - ip: 10.10.1.52
      - ip: 10.10.1.53
      - ip: 10.10.1.54
---
apiVersion: v1
kind: Service
metadata:
  name: sports
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: tcpport80
  selector:
    app: sports
  template:
    spec:
      containers:
        - image: docker.io/bigsidhu/sports-client:c677df8fcd81981bf7069b11d01fb12c9b5a9780
        - image: docker.io/bigsidhu/sports-api:c677df8fcd81981bf7069b11d01fb12c9b5a9780
