apiVersion: apps/v1
kind: Deployment
metadata:
  name: sports
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sports
  template:
    metadata:
      labels:
        app: sports
    spec:
      containers:
        - image: docker.io/bigsidhu/sports-client:e2fe036d79dac7ccbd8872d21d5c754c76de2635
          name: sports-client
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - containerPort: 80
              name: 80tcpport
          volumeMounts:
          - name: config-volume
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
        - image: docker.io/bigsidhu/sports-api:e2fe036d79dac7ccbd8872d21d5c754c76de2635
          name: sports-api
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: 8000tcpport
      volumes:
        - name: config-volume
          configMap:
            name: sports-nginx-config
      restartPolicy: Always
      dnsPolicy: Default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sports-nginx-config
  namespace: default
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }

    http{
      server {
        listen 80;
        root  /usr/share/nginx/html;
        include /etc/nginx/mime.types;

        location /api {
          proxy_pass         http://sports-api:8000/api;
          proxy_redirect     off;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
        }
      
      }
    }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sports
  namespace: default
spec:
  rules:
  - host: sports.sidhulabs.ca
    http:
      paths:
      - backend:
          service:
            name: sports-client
            port:
              number: 80
        pathType: ImplementationSpecific
status:
  loadBalancer:
    ingress:
    - ip: 10.10.1.51
    - ip: 10.10.1.52
    - ip: 10.10.1.53
    - ip: 10.10.1.54
---
apiVersion: v1
kind: Service
metadata:
  name: sports
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: tcpport80
  selector:
    app: sports
